{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://www.conterra.de/schemas/manifest.schema.json",
    "definitions": {
        "dependencies-type": {
            "type": "object",
            "propertyNames": {
                "description": "Name of dependent bundle"
            },
            "additionalProperties": {
                "type": "string",
                "uniqueItems": true,
                "description": "Version range accepted for this dependency. Examples:\n\"~1.2.3\": later or 1.2.3-x and earlier then 1.3.0-0 (\"until next minor\")\n\"^1.2.3\": later or 1.2.3-x and earlier then 2.0.0-0 (\"until next major\")\n\"1.2.3\": 1.2.3-x (\"This version, including prereleases\")\nSee https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/module-layer.html#_advanced_syntax"
            },
            "default": {},
            "examples": [
                {},
                {"dependency-bundle": "~4.9.1-SNAPSHOT"}
            ]
        },
        "icon-type": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "url": {
                    "type": "string",
                    "description": "A relative path to an image stored with the bundle or a network resource image."
                },
                "width": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                }
            },
            "default": {},
            "examples": [
                {
                    "url": "/icons/bundle.png",
                    "width": 64,
                    "height": 64
                }
            ]
        },
        "license-type": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "examples": [
                        "GPL",
                        "Apache"
                    ]
                },
                "version": {
                    "type": "string",
                    "examples": [
                        "",
                        "2.0"
                    ]
                },
                "url": {
                    "type": "string",
                    "examples": [
                        "",
                        "https://"
                    ]
                }
            }
        }
    },
    "allOf": [
        {
            "oneOf": [
                {
                    "required": ["name"]
                },
                {
                    "required": ["Bundle-SymbolicName"]
                }

            ]
        },
        {
            "oneOf": [
                {
                    "required": ["version"]
                },
                {
                    "required": ["Bundle-Version"]
                }

            ]
        }
    ],
    "additionalProperties": false,
    "properties": {
        "$schema":true,
        "name": {
            "type": "string",
            "examples": [
                "",
                "my-bundlename"
            ],
            "description": "Unique name of this bundle. Used as an identifier by the runtime. Should match the folder name of this bundle."
        },
        "namespace": {
            "type": "string",
            "examples": [
                "",
                "my-bundlename"
            ],
            "description": "The namespace of this bundle. Defaults to the \"name\" of this bundle."
        },
        "version": {
            "type": "string",
            "examples": [
                "",
                "1.0.0"
            ],
            "description": "The version of this bundle.\nHas to follow the rules of semantic versioning as defined by https://semver.org/"
        },
        "title": {
            "type": "string",
            "default": "same_as_name",
            "description": "The human-friendly display name of this bundle. Defaults to the \"name\" of this bundle."
        },
        "description": {
            "type": "string",
            "default": "",
            "description": "A description of this bundle. Displayed in the Live Configuration bundle details."
        },
        "keywords": {
            "type": "array",
            "items": {
                "type":"string"
            },
            "default": [],
            "description": "A list of categories (application specific use, tags for the bundle). Displayed in the Live Configuration bundle details."
        },
        "i18n": {
            "type": "array",
            "items": {
                "type":"string"
            },
            "default": ["bundle"],
            "description": "Names of the i18n files. Defaults to ['bundle'] if 'bundle':'true' is set.\nMust be set to [] (empty array) if no i18n files are provided (i.e. to disable i18n).\n For details, see https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/module-layer.html#i18n.",
            "examples": [
                [],
                ["bundle"]
            ]
        },
        "vendor": {
            "type": "string",
            "default": "",
            "description": "Name of the bundle vendor. Displayed in the Live Configuration bundle details."
        },
        "author": {
            "type": "string",
            "default": "Name of the bundle author. Used for package.json compatibility."
        },
        "contactAddress": {
            "type": "string",
            "default": "",
            "description": "Address where problems with the bundle may be reported, for example an email address. Displayed in the Live Configuration bundle details."
        },
        "layer": {
            "type": "string",
            "default": "",
            "description": "Name of a .js file, which is loaded during the resolve phase of the bundle. This file should load all resources required for bundle loading and component resolving, like the implementation class of a component.\nDefaults to 'module' if 'bundle': 'true' is set.\nSet to '' to disable loading a file in any case",
            "examples": [
                "",
                "module"
            ]
        },
        "startLevel": {
            "type": "integer",
            "default": 50,
            "description": "Defines the StartLevel of this bundle. This provides a way to modify or optimize the start order of bundles."
        },
        "bundle": {
            "type": "boolean",
            "default": false,
            "description": "If set to 'true' consuming entities (like the runtime) will treat this as a 'real' bundle, applying the following defaults, if not specified:\n 'layer': 'module'\n'main':'main'\n'i18n':'['bundle']'\nIf requested from the JS Registry, 'bundle':'true' is automatically set.\nIt is recommended to set this to 'true'."
        },
        "productName": {
            "type": "string",
            "default": "map.apps",
            "description": "Name of product this bundle belongs to. Used to group bundles in some UI element of map.apps.",
            "examples": [
                "",
                "map.apps"
            ]
        },
        "main": {
            "type": "string",
            "default": "",
            "description": "AMD package main file, normally used to trigger i18n loading.\nDefaults to 'main' if 'bundle': 'true' is set.\nSet to '' to disable loading a file in any case."
        },
        "configBundleLocation": {
            "type": "string",
            "default": "/config",
            "description": "Points to the sub bundle or external bundle."
        },
        "licenses": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/license-type"
            },
            "default": [],
            "description": "Metadata about the license of this bundle. Displayed in the Live Configuration bundle details."
        },
        "icon": {
            "$ref": "#/definitions/icon-type",
            "description": "Metadata about the icon of this bundle. Used in the Live Configuration bundle list."
        },
        "copyright": {
            "type": "string",
            "description": "Copyright informatione. Displayed in the Live Configuration bundle details."
        },
        "url": {
            "type": "string",
            "description": "URL, from whichfurther information about the bundle may be obtained. Displayed in the Live Configuration bundle details."
        },
        "autoStartPolicy": {
            "enum": ["yes", "no"],
            "default": "yes",
            "description": "Defines that this bundle shall be started by the runtime. Set to 'no' if bundle startup should be controlled manually."
        },
        "activator": {
            "type": "string",
            "default": "",
            "description": "Specifies a bundle activator class that implements the 'BundleActivator' interface. Its 'start' and 'stop' methods are called by the runtime when the bundle is started and stopped, respectively."
        },
        "requiredExecutionEnvironment": {
            "type": "array",
            "items": {
                "type": "string",
                "uniqueItems": true
            },
            "default": [],
            "examples": [
                ["IE:[7,]","FF:[3,]"]
            ],
            "description": "Specifies client environment requirements. If this requirements are not fulfilled, the bundle is not started."
        },
        "excludedExecutionEnvironment": {
            "type": "array",
            "items": {
                "type": "string",
                "uniqueItems": true
            },
            "default": [],
            "examples": [
                ["iPhone"]
            ],
            "description": "Excludes a execution environment, works like \"requiredExecutionEnvironment\", but excluding and not including."
        },
        "dependencies": {
            "$ref": "#/definitions/dependencies-type",
            "description": "A map of bundle names to their accepted versions this bundle depends on.\nIf this bundle has an implementation class dependency to another bundle (i.e. it needs a class of another bundle), declare this dependency here.\nIf a bundle requires another bundle to be installed in the application to work correctly, this requirement should explicitly be expressed here. The runtime ensures that theses bundles are started before this bundle."
        },
        "optionalDependencies": {
            "$ref": "#/definitions/dependencies-type",
            "description": "A map of bundle names to their accepted versions this bundle depends on, but can still work without.\nIn contrast to dependencies declared under \"dependencies\" this bundle is started, even if a dependency declared here fails to load."
        },
        "components": {
            "type": "array",
            "items": {
                "$ref": "component.schema.json"
            },
            "description": "This is the entry point for component declarations.\nSee Declarative services: https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/declarative-components.html"
        },
        "Config-Bundle-Location": {
            "type": "string",
            "description": "DEPRECATED. Use 'configBundleLocation'."
        },
        "Bundle-SymbolicName": {
            "type": "string",
            "description": "DEPRECATED. Use 'name'."
        },
        "Bundle-Version": {
            "type": "string",
            "description": "DEPRECATED. Use 'version'."
        },
        "Bundle-Name": {
            "type": "string",
            "description": "DEPRECATED. Use 'title'."
        },
        "Bundle-Description": {
            "type": "string",
            "description": "DEPRECATED. Use 'description'."
        },
        "Bundle-Vendor": {
            "type": "string",
            "description": "DEPRECATED. Use 'vendor'."
        },
        "Bundle-Category": {
            "type": "array",
            "description": "DEPRECATED. Use 'keywords'."
        },
        "Bundle-ContactAddress": {
            "type": "string",
            "description": "DEPRECATED. Use 'contactAddress'."
        },
        "Bundle-Copyright": {
            "type": "string",
            "description": "DEPRECATED. Use 'copyright'."
        },
        "Bundle-DocURL": {
            "type": "string",
            "description": "DEPRECATED. Use 'url'."
        },
        "Bundle-Main": {
            "type": "string",
            "description": "DEPRECATED. Use 'main'."
        },
        "Bundle-Icon": {
            "type": "object",
            "description": "DEPRECATED. Use 'icon'."
        },
        "Bundle-Namespace": {
            "type": "string",
            "description": "DEPRECATED. Use 'namespace'."
        },
        "Bundle-Layer": {
            "type": "string",
            "description": "DEPRECATED. Use 'layer'."
        },
        "Bundle-StartLevel": {
            "type": "integer",
            "description": "DEPRECATED. Use 'startLevel'."
        },
        "Bundle-AutoStartPolicy": {
            "type": "string",
            "description": "DEPRECATED. Use 'autoStartPolicy'."
        },
        "Bundle-Activator": {
            "type": "string",
            "description": "DEPRECATED. Use 'activator'."
        },
        "Bundle-Localization": {
            "type": "array",
            "description": "DEPRECATED. Use 'i18n'."
        },
        "Bundle-RequiredExecutionEnvironment": {
            "type": "array",
            "description": "DEPRECATED. Use 'requiredExecutionEnvironment'."
        },
        "Bundle-ExcludedExecutionEnvironment": {
            "type": "array",
            "description": "DEPRECATED. Use 'excludedExecutionEnvironment'."
        },
        "Components": {
            "type": "array",
            "items": {
                "$ref": "component.schema.json"
            },
            "description": "DEPRECATED. Use 'components'."
        },
        "Product-Name": {
            "type": "string",
            "description": "DEPRECATED. Use 'productName'."
        },
        "Bundle-License": {
            "type": "string",
            "description": "DEPRECATED. Use 'licenses'."
        },
        "Require-Bundle": {
            "type": "array",
            "description": "DEPRECATED. Use 'dependencies'."
        },
        "i18n-extension": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "This is an dynamic manifest property used to transport. Additional to load i18n. It is usually added by a ConfigLocator and not defined by the bundle."
        },



        "Framework-Startlevel-Beginning": {
            "$ref": "framework.schema.json#/definitions/Framework-Startlevel-Beginning"
        },
        "Framework-Startlevel-Running": {
            "$ref": "framework.schema.json#/definitions/Framework-Startlevel-Running"
        },
        "Components-Create-On-Starting": {
            "$ref": "framework.schema.json#/definitions/Components-Create-On-Starting"
        },
        "Application-Root": {
            "$ref": "framework.schema.json#/definitions/Application-Root"
        },
        "Application-Config": {
            "$ref": "framework.schema.json#/definitions/Application-Config"
        },



        "layout-widgets": {
            "$ref": "layout.schema.json#/definitions/layout-widgets"
        },
        "layout-templates": {
            "$ref": "layout.schema.json#/definitions/layout-templates"
        },
        "CSS-Themes": {
            "$ref": "layout.schema.json#/definitions/CSS-Themes"
        },
        "CSS-Themes-Extension": {
            "$ref": "layout.schema.json#/definitions/CSS-Themes-Extension"
        },
        
        
        "domain-config": {
            "$ref": "support.schema.json#/definitions/domain-config"
        },
        "ACE-VERSION": {
            "$ref": "support.schema.json#/definitions/ACE-VERSION"
        },
        "d3-version": {
            "$ref": "support.schema.json#/definitions/d3-version"
        }

    },
    "description": "The manifest.json file provides some meta information and defines the functionality provided by the bundle.",
    "examples": [
        {},
        {
            "name": "",
            "version": "",
            "bundle": true
        },
        {
            "name": "",
            "version": "",
            "title": "",
            "description": "",
            "vendor": "con terra GmbH",
            "productName": "map.apps",
            "keywords": [
                "mapping"
            ],
            "main": "main",
            "layer": "module",
            "dependencies": {
            },
            "components": []
        }
    ]

}